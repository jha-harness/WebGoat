# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow checks out code, performs a Codacy security scan
# and integrates the results with the
# GitHub Advanced Security code scanning feature.  For more information on
# the Codacy security scan action usage and parameters, see
# https://github.com/codacy/codacy-analysis-cli-action.
# For more information on Codacy Analysis CLI in general, see
# https://github.com/codacy/codacy-analysis-cli.

name: End 2 End - build, test, publish, deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]

permissions:
  contents: read

jobs:

  sca-scans:
    env:
      WORKSPACE: https://github.com/${{ github.repository }}/blob/${{ github.sha }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    steps:
    - name: Perform Scan
      uses: ShiftLeftSecurity/scan-action@master
      with:
        type: "credscan,java,depscan"
    - uses: actions/upload-artifact@v1
      with:
        name: reports
        path: reports

  lint:
    name: DevSkim
    runs-on: ubuntu-20.04
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run DevSkim scanner
        uses: microsoft/DevSkim-Action@v1

      - name: Upload DevSkim scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: devskim-results.sarif

  build-and-test:
      needs: [sca-scans, lint]
      runs-on: ubuntu-latest
      permissions:
        contents: write
      # display name of the job
      name: "Code Build and Test"
      steps:
          # Uses an default action to checkout the code
          -   uses: actions/checkout@v4
          # Uses an action to add Python to the VM
          -   name: Setup Python
              uses: actions/setup-python@v5
              with:
                  python-version: '3.7'
                  architecture: x64
          # Uses an action to add JDK 17 to the VM (and mvn?)
          -   name: set up JDK 17
              uses: actions/setup-java@v4
              with:
                  distribution: 'temurin'
                  java-version: 17
                  architecture: x64
          #Uses an action to set up a cache using a certain key based on the hash of the dependencies
          -   name: Cache Maven packages
              uses: actions/cache@v4.0.0
              with:
                  path: ~/.m2
                  key: ubuntu-latest-m2-${{ hashFiles('**/pom.xml') }}
                  restore-keys: ubuntu-latest-m2-
          -   uses: BSFishy/pip-action@v1
              with:
                  packages: |
                      robotframework
                      robotframework-SeleniumLibrary
                      webdriver-manager
                      selenium==4.9.1
                  # TODO https://github.com/robotframework/SeleniumLibrary/issues/1835
          -   name: Run with Maven
              run: mvn --no-transfer-progress spring-boot:run &
          -   name: Wait to start
              uses: ifaxity/wait-on-action@v1
              with:
                  resource: http://127.0.0.1:8080/WebGoat
          -   name: Test with Robotframework
              run: python3 -m robot --variable HEADLESS:"1" --outputdir robotreport robot/goat.robot
          # send report to forks only due to limits on permission tokens
          -   name: Send report to commit
              if: github.repository != 'WebGoat/WebGoat' && github.event_name == 'push'
              uses: joonvena/robotframework-reporter-action@v2.4
              with:
                  gh_access_token: ${{ secrets.GITHUB_TOKEN }}
                  report_path: 'robotreport'

  bearer-sast:
    needs: build-and-test
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    steps:
      # Checkout project source
      - uses: actions/checkout@v4
      # Scan code using Bearer CLI
      - name: Run Report
        id: report
        uses: bearer/bearer-action@828eeb928ce2f4a7ca5ed57fb8b59508cb8c79bc
        with:
          api-key: ${{ secrets.BEARER_TOKEN }}
          format: sarif
          output: results.sarif
          exit-code: 0
      # Upload SARIF file generated in previous step
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif

  # codeql-analyze:
  #   name: Analyze (${{ matrix.language }})
  #   needs: build-and-test
  #   # Runner size impacts CodeQL analysis time. To learn more, please see:
  #   #   - https://gh.io/recommended-hardware-resources-for-running-codeql
  #   #   - https://gh.io/supported-runners-and-hardware-resources
  #   #   - https://gh.io/using-larger-runners (GitHub.com only)
  #   # Consider using larger runners or machines with greater resources for possible analysis time improvements.
  #   runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
  #   timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
  #   permissions:
  #     # required for all workflows
  #     security-events: write

  #     # required to fetch internal or private CodeQL packs
  #     packages: read

  #     # only required for workflows in private repositories
  #     actions: read
  #     contents: read

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       include:
  #       - language: javascript-typescript
  #         build-mode: none
  #       # CodeQL supports the following values keywords for 'language': 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift'
  #       # your codebase is analyzed, see https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/codeql-code-scanning-for-compiled-languages
  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v4

  #   # Initializes the CodeQL tools for scanning.
  #   - name: Initialize CodeQL
  #     uses: github/codeql-action/init@v3
  #     with:
  #       languages: ${{ matrix.language }}
  #       build-mode: ${{ matrix.build-mode }}

  #   - name: Perform CodeQL Analysis
  #     uses: github/codeql-action/analyze@v3
  #     with:
  #       category: "/language:${{matrix.language}}"

        
  release-and-push:
    # if: github.repository == 'WebGoat/WebGoat'
    name: Release WebGoat
    runs-on: ubuntu-latest
    permissions:
        contents: write
    environment:
      name: release
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          architecture: x64

      - name: Cache Maven packages
        uses: actions/cache@v4.0.0
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: "Set labels for ${{ github.ref }}"
        run: |
          echo "WEBGOAT_TAG_VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
          WEBGOAT_MAVEN_VERSION=${{ github.ref_name }}
          echo "WEBGOAT_MAVEN_VERSION=${WEBGOAT_MAVEN_VERSION:1}" >> $GITHUB_ENV
      - name: Build with Maven
        run: |
          mvn --no-transfer-progress versions:set -DnewVersion=${{ env.WEBGOAT_MAVEN_VERSION }}
          mvn --no-transfer-progress install -DskipTests

      - name: "Set up QEMU"
        uses: docker/setup-qemu-action@v2.2.0
        with:
          platforms: all

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v3

      - name: "Login to dockerhub"
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "Build and push WebGoat"
        uses: docker/build-push-action@v5.1.0
        with:
          context: ./
          file: ./Dockerfile
          push: true
          platforms: linux/amd64, linux/arm64
          tags: |
            jhaharness/webgoat:${{ env.WEBGOAT_TAG_VERSION }}
            jhaharness/webgoat:latest
          build-args: |
            webgoat_version=${{ env.WEBGOAT_MAVEN_VERSION }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
        with:
          image-ref: 'jhaharness/webgoat:${{ env.WEBGOAT_TAG_VERSION }}'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
